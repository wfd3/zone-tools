.TH MKKEA 1 "July 2025" "zone-tools" "User Commands"
.SH NAME
mkkea \- generate Kea DHCP reservations from DNS zone files
.SH SYNOPSIS
.B mkkea
[\fB\-o\fR \fIoutput\fR]
[\fB\-s\fR]
[\fB\-H\fR|\fB\-I\fR|\fB\-M\fR]
[\fB\-n\fR \fInetwork\fR]
[\fB\-h\fR]
\fIzonefile\fR [\fIzonefile\fR ...]
.SH DESCRIPTION
.B mkkea
extracts Kea DHCP reservation data from DNS zone files and outputs them in JSON 
format suitable for inclusion in Kea DHCP server configuration files.

The program processes DNS zone files looking for hosts that have both A records 
and TXT records containing Kea DHCP directives. TXT records must begin with the 
prefix "kea:" followed by space-separated key-value pairs.

Only A records without the ";inaddr" or ";in-addr" comment are processed, as 
these comments indicate records intended for reverse DNS generation rather than 
DHCP reservations.
.SH OPTIONS
.TP
.BR \-o " " \fIoutput\fR
Write output to \fIoutput\fR file instead of stdout.
.TP
.BR \-s
Stop with error if no Kea records are found in any input files.
.TP
.BR \-H
Sort output alphabetically by hostname. Only one sort option may be specified.
.TP
.BR \-I
Sort output numerically by IP address (IPv4 and IPv6). Only one sort option 
may be specified.
.TP
.BR \-M
Sort output by MAC address (hw-address field). Handles various MAC address 
formats and sorts reservations without MAC addresses first. Only one sort 
option may be specified.
.TP
.BR \-n " " \fInetwork\fR
Limit output to IP addresses within the specified CIDR network 
(e.g., 192.168.1.0/24). Only A records with IP addresses in this 
network will be included in the output.
.TP
.BR \-h
Display help message and exit.
.SH ZONE FILE FORMAT
Zone files should contain A records and TXT records for the same hostname.
TXT records containing Kea directives must start with "kea:" followed by 
key-value pairs separated by commas.

.B Example:
.nf
    host1    IN  A    192.168.1.100
             IN  TXT  "kea: hw-address aa:bb:cc:dd:ee:ff"
    
    host2    IN  A    192.168.1.101  
             IN  TXT  "kea: hw-address 11:22:33:44:55:66, client-classes [kids]"
    
    # This A record will be skipped (inaddr comment)
    gateway  IN  A    192.168.1.1   ;inaddr
             IN  TXT  "kea: hw-address ff:ee:dd:cc:bb:aa"
.fi
.SH SUPPORTED KEA DIRECTIVES
.TP
.BR hw-address
MAC address for the DHCP reservation. Must be in standard colon-separated 
hexadecimal format (e.g., "aa:bb:cc:dd:ee:ff").
.TP
.BR client-classes
Array of client class names enclosed in square brackets. Individual class 
names are automatically quoted in the output (e.g., "[kids, test]" becomes 
["kids", "test"]).
.SH OUTPUT FORMAT
The program outputs JSON objects suitable for direct inclusion in Kea DHCP 
server's "reservations" array. Each reservation contains the fully qualified 
hostname, IP address, and Kea-specific directives.

.B Given this zone file input:
.nf
    $ORIGIN example.com.
    host1    IN  A    192.168.1.100
             IN  TXT  "kea: hw-address aa:bb:cc:dd:ee:ff"
    
    host2    IN  A    192.168.1.101  
             IN  TXT  "kea: hw-address 11:22:33:44:55:66, client-classes [kids]"
.fi

.B The output will be:
.nf
    // Generated by mkkea
    // This file is auto-generated. Do not edit.
    //
    // Generated on Sun, 06 Jul 2025 12:00:00 PDT
    // Input files: example.zone
    //

    {
        "hostname": "host1.example.com.",
        "ip-address": "192.168.1.100", 
        "hw-address": "aa:bb:cc:dd:ee:ff"
    },
    {
        "hostname": "host2.example.com.",
        "ip-address": "192.168.1.101",
        "client-classes": ["kids"],
        "hw-address": "11:22:33:44:55:66"
    }
.fi

The output includes a header with generation timestamp and input file names 
for documentation purposes. Keys within each reservation are sorted 
alphabetically for consistent output. Reservations appear in the order 
they were processed from the zone files unless sorted using one of the 
sort options (\fB\-H\fR, \fB\-I\fR, or \fB\-M\fR).
.SH EXAMPLES
.TP
Generate reservations from a single zone file:
.nf
mkkea example.zone
.fi
.TP
Filter to a specific network and save to file:
.nf
mkkea -n 192.168.1.0/24 -o dhcp-reservations.conf example.zone
.fi
.TP
Process multiple zone files:
.nf
mkkea internal.zone guest.zone lab.zone > all-reservations.json
.fi
.TP
Stop with error if no Kea records found:
.nf
mkkea -s -o output.conf zones/*.zone
.fi
.TP
Sort output by hostname:
.nf
mkkea -H -o sorted-reservations.conf example.zone
.fi
.TP
Sort output by IP address:
.nf
mkkea -I example.zone
.fi
.TP
Sort output by MAC address:
.nf
mkkea -M example.zone
.fi
.SH DIAGNOSTICS
The program will exit with status 0 on success. If the \fB\-s\fR option is 
specified and no Kea records are found, the program exits with status 1.

Error messages are written to stderr and typically indicate:
.IP \(bu 2
Zone file parsing errors (invalid DNS syntax)
.IP \(bu 2
Invalid CIDR network specifications
.IP \(bu 2
Unknown Kea directives in TXT records
.IP \(bu 2
File I/O errors
.SH FILES
.TP
.I *.zone
DNS zone files in standard BIND format
.SH SEE ALSO
.BR kea-dhcp4 (8),
.BR kea-dhcp6 (8),
.BR named (8),
.BR dig (1)

Kea DHCP Server documentation: https://kea.readthedocs.io/
.SH AUTHOR
Part of the zone-tools suite for DNS zone file processing.
.SH BUGS
The program currently supports only IPv4 A records. IPv6 AAAA records are 
not processed for DHCP reservations.

Client class validation is minimal - the program does not verify that 
specified client classes are defined in the Kea configuration.